/*
* bootstrap-table - v1.8.1 - 2015-05-29
* https://github.com/wenzhixin/bootstrap-table
* Copyright (c) 2015 zhixin wen
* Licensed MIT License
*/
!(function (a) { 'use strict'; var b = function (a) { var b = arguments; var c = !0; var d = 1; return a = a.replace(/%s/g, function () { var a = b[d++]; return typeof a === 'undefined' ? (c = !1, '') : a }), c ? a : '' }; var c = function (b, c) { var d = -1; return a.each(b, function (a, b) { return b.field === c ? (d = a, !1) : !0 }), d }; var d = function (b, c, d, e) { if (typeof c === 'string') { var f = c.split('.'); f.length > 1 ? (c = window, a.each(f, function (a, b) { c = c[b] })) : c = window[c] } return typeof c === 'object' ? c : typeof c === 'function' ? c.apply(b, d) : e }; a.extend(a.fn.bootstrapTable.defaults, { filterControl: !1, onColumnSearch: function () { return !1 } }), a.extend(a.fn.bootstrapTable.COLUMN_DEFAULTS, { filterControl: void 0, filterData: void 0 }), a.extend(a.fn.bootstrapTable.Constructor.EVENTS, { 'column-search.bs.table': 'onColumnSearch' }); var e = a.fn.bootstrapTable.Constructor; var f = e.prototype.initHeader; var g = e.prototype.initBody; var h = e.prototype.initSearch; e.prototype.initHeader = function () { if (f.apply(this, Array.prototype.slice.apply(arguments)), this.options.filterControl) { var c; var d; var e = !1; var g = this; var h = 0; a.each(this.options.columns, function (f, h) { if (c = 'hidden', d = [], h.visible) { if (h.filterControl) switch (d.push('<div style="margin: 0px 2px 2px 2px;" class="filterControl">'), h.filterControl && h.searchable && (e = !0, c = 'visible'), h.filterControl.toLowerCase()) { case 'input':d.push(b('<input type="text" class="form-control" style="width: 100%; visibility: %s">', c)); break; case 'select':d.push(b('<select class="%s form-control" style="width: 100%; visibility: %s"></select>', h.field, c)) } else d.push('<div style="height: 34px;"></div>'); if (g.$header.find(b('.th-inner:eq("%s")', f)).next().append(d.join('')), void 0 !== h.filterData && h.filterData.toLowerCase() !== 'column') { var i = h.filterData.substring(0, 3); var j = h.filterData.substring(4, h.filterData.length); var k = a('.' + h.field); switch (k.append(a('<option></option>').attr('value', '').text('')), i) { case 'url':a.ajax({ url: j, dataType: 'json', success: function (b) { a.each(b, function (b, c) { k.append(a('<option></option>').attr('value', b).text(c)) }) } }); break; case 'var':var l = window[j]; for (var m in l)k.append(a('<option></option>').attr('value', m).text(l[m])) } } } }), e ? (this.$header.off('keyup', 'input').on('keyup', 'input', function (a) { clearTimeout(h), h = setTimeout(function () { g.onColumnSearch(a) }, g.options.searchTimeOut) }), this.$header.off('change', 'select').on('change', 'select', function (a) { clearTimeout(h), h = setTimeout(function () { g.onColumnSearch(a) }, g.options.searchTimeOut) })) : this.$header.find('.filterControl').hide() } }, e.prototype.initBody = function () { g.apply(this, Array.prototype.slice.apply(arguments)); for (var b = this, e = this.getData(), f = this.pageFrom - 1; f < this.pageTo; f++) { var h = e[f]; a.each(this.header.fields, function (e, g) { var i = h[g]; var j = b.options.columns[c(b.options.columns, g)]; if (i = d(b.header, b.header.formatters[e], [i, h, f], i), !(j.checkbox && j.radio || void 0 === j.filterControl || j.filterControl.toLowerCase() !== 'select' || !j.searchable || void 0 !== j.filterData && j.filterData.toLowerCase() !== 'column')) { var k; var l = a('.' + j.field); var m = 0; var n = !1; if (void 0 !== l) if (k = l.get(0).options, k.length === 0)l.append(a('<option></option>').attr('value', '').text('')), l.append(a('<option></option>').attr('value', i).text(i)); else { for (;m < k.length; m++) if (k[m].value === i) { n = !0; break }n || l.append(a('<option></option>').attr('value', i).text(i)) } } }) } }, e.prototype.initSearch = function () { h.apply(this, Array.prototype.slice.apply(arguments)); var b = this; var c = a.isEmptyObject(this.filterColumnsPartial) ? null : this.filterColumnsPartial; this.data = c ? a.grep(this.data, function (e, f) { for (var g in c) { var h = c[g].toLowerCase(); var i = e[g]; if (i = d(b.header, b.header.formatters[a.inArray(g, b.header.fields)], [i, e, f], i), a.inArray(g, b.header.fields) === -1 || typeof i !== 'string' && typeof i !== 'number' || (i + '').toLowerCase().indexOf(h) === -1) return !1 } return !0 }) : this.data }, e.prototype.onColumnSearch = function (b) { var c = a.trim(a(b.currentTarget).val()); var d = a(b.currentTarget).parent().parent().parent().data('field'); a.isEmptyObject(this.filterColumnsPartial) && (this.filterColumnsPartial = {}), c ? this.filterColumnsPartial[d] = c : delete this.filterColumnsPartial[d], this.options.pageNumber = 1, this.onSearch(b), this.updatePagination(), this.trigger('column-search', d, c) } }(jQuery))
