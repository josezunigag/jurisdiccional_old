/*
* bootstrap-table - v1.8.1 - 2015-05-29
* https://github.com/wenzhixin/bootstrap-table
* Copyright (c) 2015 zhixin wen
* Licensed MIT License
*/
!(function (a) { 'use strict'; a.extend(a.fn.bootstrapTable.defaults, { showFilter: !1 }); var b = a.fn.bootstrapTable.Constructor; var c = b.prototype.init; var d = b.prototype.initSearch; b.prototype.init = function () { c.apply(this, Array.prototype.slice.apply(arguments)); var b = this; this.$el.on('load-success.bs.table', function () { b.options.showFilter && a(b.options.toolbar).bootstrapTableFilter({ connectTo: b.$el }) }) }, b.prototype.initSearch = function () { d.apply(this, Array.prototype.slice.apply(arguments)), this.options.sidePagination !== 'server' && typeof this.searchCallback === 'function' && (this.data = a.grep(this.options.data, this.searchCallback)) }, b.prototype.getData = function () { return this.searchText || this.searchCallback ? this.data : this.options.data }, b.prototype.getColumns = function () { return this.options.columns }, b.prototype.registerSearchCallback = function (a) { this.searchCallback = a }, b.prototype.updateSearch = function () { this.options.pageNumber = 1, this.initSearch(), this.updatePagination() }, b.prototype.getServerUrl = function () { return this.options.sidePagination === 'server' ? this.options.url : !1 }, a.fn.bootstrapTable.methods.push('getColumns', 'registerSearchCallback', 'updateSearch', 'getServerUrl') }(jQuery))
